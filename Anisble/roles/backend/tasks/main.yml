# dnf module disable nodejs -y
# dnf module enable nodejs:20 -y 
# dnf install nodejs -y 
# useradd expense
# mkdir /app 
# curl -o /tmp/backend.zip https://expense-web-app.s3.amazonaws.com/backend.zip 
# cp backend.service /etc/systemd/system/backend.service
# cd /app 
# unzip -o /tmp/backend.zip
# cd /app 
# npm install 
# chmod -R 775 /app
# chown -R expense:expense /app
# dnf install mysql-server -y
# mysql -h 172.31.33.204 -uroot -pExpenseApp@1 < /app/schema/backend.sql
# systemctl daemon-reload
# systemctl enable backend 
# systemctl start backend 

- name: Set Hostname to {{COMP}}
  ansible.builtin.shell: set-hostname {{COMP}}

- name: Disable of nodejs
  ansible.builtin.shell: dnf module disable nodejs -y

- name: Enabling of nodejs:20
  ansible.builtin.shell: dnf module enable nodejs:20 -y

- name: Install a package
  ansible.builtin.dnf:
    name: nodejs
    state: present

- name: Add the user 
  ansible.builtin.user:
    name: expense
    comment: App user

- name: Delete a file
  ansible.builtin.file:
    path: "{{APP_PATH}}"
    state: absent

- name: Create a directory
  ansible.builtin.file:
    path: "{{APP_PATH}}"
    state: directory

- name: Dowloading file to remote server
  ansible.builtin.unarchive:
    src: https://expense-web-app.s3.amazonaws.com/backend.zip 
    dest: "{{APP_PATH}}"              # Remote directory
    remote_src: yes                 # File is copied to remote before extracting

- name: Install node.js package.
  community.general.npm:
    path: "{{APP_PATH}}"

- name: Install MySQL Server
  ansible.builtin.package:
    name: mysql-server
    state: present
    
- name: Install pip3
  package:
    name: python3-pip
    state: present

- name: Install PyMySQL
  pip:
    name: PyMySQL
    executable: pip3

- name: Inject schema
  community.mysql.mysql_db:
    state: import
    name: all
    target: /app/schema/backend.sql
    login_user: root
    login_password: ExpenseApp@1
    login_host: mysql.exp.in

- name: Copy file
  ansible.builtin.copy:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: ReStart nginx service
  ansible.builtin.systemd:
    name: backend
    state: restarted
    enabled: yes   # Enable to start at boot
